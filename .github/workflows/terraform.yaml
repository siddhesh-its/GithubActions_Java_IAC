---
name: "Vprofile IAC"
on: workflow_dispatch
  # push:
  #   branches:
  #     - stage
  #     - main
  #   paths:
  #     - terraform/**
    
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - terraform/**
    
env:
  #aws auth
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  #TF state file path
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

  AWS_REGION: us-est-2 #us-east-2
  EKS_CLUSTER: vprofile-eks  

jobs:
  terraform: #job name
    name: Apply terraform code change #metadata
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps: #actual actions
      - name: Checkout source code
        uses: actions/checkout@v4 #from github marketplace owner/action:version

      - name: setup terraform on github runners
        uses: hashicorp/setup-terraform@v3
        # with:
        #   terraform_version: "1.10.4" #terraform version
      
      - name: Terraform initialization
        id: init  #can be used by other steps
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Check terraform format
        id: format
        run: terraform fmt -check #check if terraform format is correct or not, if not nonzero exit code is return

      - name: Validate terraform
        id: isValid
        run: terraform validate

      - name: Plan terraform
        id: plan
        run: terraform plan -no-color -input=false -out planfile #out will store it o/p in planfile, avoid parallel execution
        continue-on-error: true #custom check below

      - name: Break on error
        if: steps.plan.outcome == 'failure'
        run: exit 1 

      #below code will cost money
      - name: Apply terraform changes
        id: apply
        if: github.ref == 'refs/head/main' && github.event.name == 'push' #run only if something is pushed to main branch
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

